# This file can be used to build from a machine with Docker and internet access, without having the rest of
# the source, as it will pull everything it needs from github.

ARG BUILD_BIN=go2lunchsrv.bin

FROM golang:latest as builder
# Specifying the same ARG without value copies it into this FROM-scope, from the outside scoped ARG before FROM
ARG BUILD_BIN
# Setting TZ makes "make" build the correct time (at least for local builds) into the executable
ARG ARG_TZ=Europe/Stockholm
ENV TZ=${ARG_TZ}
# Note that $GOPATH is set to /go from the parent image
# We don't need to use GOPATH anymore after moving to Go modules,
# but there's no harm in it either.
WORKDIR ${GOPATH}/src/github.com/oddlid/
RUN git clone https://github.com/oddlid/go2lunch.git
WORKDIR ${GOPATH}/src/github.com/oddlid/go2lunch/server
RUN make BINARY=${BUILD_BIN}

FROM alpine:latest
LABEL maintainer="Odd E. Ebbesen <oddebb@gmail.com>"
ARG BUILD_BIN
ARG ARG_TZ=Europe/Stockholm
ENV SRV_BIN=${BUILD_BIN}
ENV TZ=${ARG_TZ}
RUN apk add --no-cache --update \
  ca-certificates \
  tzdata \
  && \
  rm -rf /var/cache/apk/*
RUN adduser -D -u 1000 lunchsrv
COPY --from=builder /go/src/github.com/oddlid/go2lunch/server/${BUILD_BIN} /usr/local/bin/
RUN chown lunchsrv /usr/local/bin/${BUILD_BIN} && chmod 555 /usr/local/bin/${BUILD_BIN}
EXPOSE 20666 20667
USER lunchsrv
#ENTRYPOINT ["tini", "-g", "--"]
CMD ${SRV_BIN} -h

# vim: set syntax=Dockerfile:
